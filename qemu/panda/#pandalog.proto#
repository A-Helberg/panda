
syntax = "proto2";
package panda;

message TaintQueryUniqueLabelSet {
    required uint64 ptr = 1;
    repeated uint32 label = 2;
}
message SrcInfo {
    required uint32 filename = 1;
    required uint32 linenum = 2;
    required uint32 astnodename = 3;
}
message TaintQuery {
    required uint64 ptr = 1;
    required uint32 tcn = 2;
    required uint32 offset = 3;
}
message AttackPoint {
    required uint32 info = 1;
}
message TaintQueryHypercall {
    required uint64 buf = 1;
    required uint32 len = 2;
    repeated uint32 data = 3;
    required uint32 num_tainted = 4;
}
message Process {
    required uint32 pid = 1;
    required string name = 2;
}
message NtCreateUserProcess {
    required Process cur_p = 1;
    required Process new_p = 2;
    required string new_long_name = 3;
}
message NtTerminateProcess {
    required Process cur_p = 1;
    required Process term_p = 2;
}
message ProcessFile {
    required Process proc = 1;
    required string filename = 2;
}
message ProcessKey {
    required Process proc = 1;
    required string keyname = 2;
}
message ProcessKeyValue {
    required ProcessKey pk = 1;
    required string value_name = 2;
}
message ProcessKeyIndex {
    required ProcessKey pk = 1;
    required uint32 index = 2;
}
message Section {
    required Process proc = 1;
    required int section_id = 2;
}
message ALPCPort {
    optional Process client = 2;
    optional Process server = 3;
}
message ALPCPortInit {
    required Process proc = 1;
    required ALPCPort port = 2;
    required string port_name = 3;
}


message LogEntry {

required uint64 pc = 1;    
required uint64 instr = 2;

optional TaintQueryUniqueLabelSet taint_query_unique_label_set = 33;
optional TaintQuery taint_query = 34;
optional SrcInfo src_info = 35;
optional TaintQueryHypercall taint_query_hypercall = 38;
optional AttackPoint attack_point = 39;
repeated uint64 callstack = 10;
optional uint64 asid = 3; 
optional string process_name = 4;
optional uint32 process_id = 5;
optional uint64 taint_label_virtual_addr = 6;
optional uint64 taint_label_physical_addr = 7;
optional uint32 taint_label_number = 8;
mesage SectionMapView {
    required Section section = 1;
    required Process target = 2;
}
optional Process new_pid = 11;
optional NtCreateUserProcess nt_create_user_process = 12;
optional NtTerminateProcess nt_terminate_process = 13;
optional ProcessFile nt_create_file = 14;
optional ProcessFile nt_read_file = 15;
optional ProcessFile nt_delete_file = 16;
optional ProcessFile nt_write_file = 17;
optional ProcessKey nt_create_key = 18;
optional ProcessKey nt_create_key_transacted = 19;
optional ProcessKey nt_open_key = 20;
optional ProcessKey nt_open_key_ex = 21;
optional ProcessKey nt_open_key_transacted = 22;
optional ProcessKey nt_open_key_transacted_ex = 23;
optional ProcessKey nt_delete_key = 24;
optional ProcessKey nt_query_key = 25;
optional ProcessKeyValue nt_query_value_key = 27;
optional ProcessKeyValue nt_delete_value_key = 28;
optional ProcessKeyIndex nt_enumerate_key = 29;
optional ProcessKeyIndex nt_enumerate_value_key = 30;
optional ProcessKeyValue nt_set_value_key = 31;
optional Section nt_create_section = 40;
optional Section nt_open_section = 41;
optional SectionMapView nt_map_view_of_section = 42;
optional ALPCPortInit nt_create_port = 43;
optional ALPCPortInit nt_connect_port = 44;
optional ALPCPort nt_listen_port = 45;
optional ALPCPort nt_accept_connect_port = 46;
optional ALPCPort nt_complete_connect_port = 47;
optional ALPCPort nt_request_port = 48;
optional ALPCPort nt_request_wait_reply_port = 49;
optional ALPCPort nt_reply_port = 50;
optional ALPCPort nt_reply_wait_reply_port = 51;
optional ALPCPort nt_reply_wait_receive_port = 52;
optional ALPCPort nt_impersonate_client_of_port = 53;

}
